{"version":3,"file":"static/js/186.21d978c4.chunk.js","mappings":"4LAEaA,EAAS,WACpB,OACE,SAAC,KAAD,CACEC,YAAY,OACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,GAGd,C,yGCiCD,UAxCgB,WACd,OAA6DC,EAAAA,EAAAA,KAArDC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,QAASC,EAAzB,EAAyBA,WAAYC,EAArC,EAAqCA,QAASC,EAA9C,EAA8CA,WAkB9C,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEID,GAAW,GAFf,UAGiCE,EAAAA,EAAAA,mBAAkBN,EAAOO,SAH1D,OAGUC,EAHV,OAIIN,EAAWM,EAAeC,SAJ9B,gDAMIC,QAAQC,IAAI,SANhB,yBAQIP,GAAW,GARf,6EADc,uBAAC,WAAD,wBAadQ,EACD,GAAE,CAACV,EAAYE,EAAYJ,EAAOO,WAGjC,2BACGJ,IAAW,SAAC,IAAD,IACXF,EAAQY,OAAS,GAChB,wBACGZ,EAAQa,KAAI,SAAAC,GACX,OACE,2BACE,uBAAIA,EAAEC,UACN,uBAAID,EAAEE,YAFCF,EAAEG,GAKd,OAGH,uBAAG,gDAIV,C,0QCxCKC,EAAU,CACdC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIOC,EAAW,mCAAG,oGACNC,EAAAA,EAAAA,IAVT,iEAUwBL,GADT,cACnBM,EADmB,yBAGlBA,EAAKC,MAHa,2CAAH,qDAMXC,EAAe,mCAAG,WAAMpB,GAAN,gFACvBqB,EADuB,6CACwBrB,EADxB,4BAEViB,EAAAA,EAAAA,IAAUI,EAAQT,GAFR,cAEvBM,EAFuB,yBAItBA,EAAKC,MAJiB,2CAAH,sDAOfG,EAAiB,mCAAG,WAAMtB,GAAN,gFACzBqB,EADyB,6CACsBrB,EADtB,oCAEZiB,EAAAA,EAAAA,IAAUI,EAAQT,GAFN,cAEzBM,EAFyB,yBAIxBA,EAAKC,MAJmB,2CAAH,sDAOjBpB,EAAiB,mCAAG,WAAMC,GAAN,gFACzBqB,EADyB,6CACsBrB,EADtB,2CAEZiB,EAAAA,EAAAA,IAAUI,EAAQT,GAFN,cAEzBM,EAFyB,yBAIxBA,EAAKC,MAJmB,2CAAH,sDAOjBI,EAAkB,mCAAG,WAAMC,GAAN,gFAC1BH,EAD0B,0DACkCG,EADlC,uDAEbP,EAAAA,EAAAA,IAAUI,EAAQT,GAFL,cAE1BM,EAF0B,yBAIzBA,EAAKC,MAJoB,2CAAH,qD,qFCnClB3B,EAAiB,WAC5B,IAAMC,GAASgC,EAAAA,EAAAA,MACf,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAO9B,EAAP,KAAgBC,EAAhB,KACA,GAAwB6B,EAAAA,EAAAA,UAAS,MAAjC,eAAOK,EAAP,KAAaC,EAAb,KACA,GAA8BN,EAAAA,EAAAA,UAAS,IAAvC,eAEA,MAAO,CACLjC,OAAAA,EACAkC,OAAAA,EACAC,UAAAA,EACAC,MAAAA,EACAC,SAAAA,EACAlC,QAAAA,EACAC,WAAAA,EACAkC,KAAAA,EACAC,QAAAA,EACAtC,QAZF,KAaEC,WAbF,KAeD,C","sources":["components/Loader/Loader.jsx","components/Reviews/Reviews.jsx","components/api.js","hooks/useMovieParams.js"],"sourcesContent":["import { RotatingLines } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <RotatingLines\n      strokeColor=\"grey\"\n      strokeWidth=\"5\"\n      animationDuration=\"0.75\"\n      width=\"30\"\n      visible={true}\n    />\n  );\n};\n","import { Loader } from 'components/Loader/Loader';\nimport { fetchMovieReviews } from 'components/api';\nimport { useMovieParams } from 'hooks/useMovieParams';\nimport { useEffect } from 'react';\n\nconst Reviews = () => {\n  const { params, reviews, setReviews, loading, setLoading } = useMovieParams();\n\n  useEffect(() => {\n    async function fetchMovie() {\n      try {\n        setLoading(true);\n        const fetchedCredits = await fetchMovieReviews(params.movieId);\n        setReviews(fetchedCredits.results);\n      } catch (error) {\n        console.log('ERROR');\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    fetchMovie();\n  }, [setReviews, setLoading, params.movieId]);\n\n  return (\n    <div>\n      {loading && <Loader />}\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(r => {\n            return (\n              <li key={r.id}>\n                <p>{r.author}</p>\n                <p>{r.content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst url = 'https://api.themoviedb.org/3/trending/movie/day?language=en-US';\nconst options = {\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiZWYwNzZkYzkxYmE1ZGM1YzNhNzg0ZmEyZjhkYjJmOCIsInN1YiI6IjY1MmU1MzcyZWE4NGM3MDBlYmEzNDk3NCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.eb5AtnB5In8Rid9oVZN6shMyC5JnuDma5srOC9ipFqk',\n  },\n};\n\nexport const fetchMovies = async () => {\n  const resp = await axios.get(url, options);\n\n  return resp.data;\n};\n\nexport const fetchMoviesById = async movieId => {\n  const newUrl = `https://api.themoviedb.org/3/movie/${movieId}?language=en-US`;\n  const resp = await axios.get(newUrl, options);\n\n  return resp.data;\n};\n\nexport const fetchMovieCredits = async movieId => {\n  const newUrl = `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US`;\n  const resp = await axios.get(newUrl, options);\n\n  return resp.data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const newUrl = `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1`;\n  const resp = await axios.get(newUrl, options);\n\n  return resp.data;\n};\n\nexport const fetchMovieBySearch = async searchMovieByInput => {\n  const newUrl = `https://api.themoviedb.org/3/search/movie?query=${searchMovieByInput}&include_adult=false&language=en-US&page=1`;\n  const resp = await axios.get(newUrl, options);\n\n  return resp.data;\n};\n","import { useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport const useMovieParams = () => {\n  const params = useParams();\n  const [movies, setMovies] = useState([]);\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [cast, setCast] = useState(null);\n  const [reviews, setReviews] = useState([]);\n\n  return {\n    params,\n    movies,\n    setMovies,\n    movie,\n    setMovie,\n    loading,\n    setLoading,\n    cast,\n    setCast,\n    reviews,\n    setReviews,\n  };\n};\n"],"names":["Loader","strokeColor","strokeWidth","animationDuration","width","visible","useMovieParams","params","reviews","setReviews","loading","setLoading","useEffect","fetchMovieReviews","movieId","fetchedCredits","results","console","log","fetchMovie","length","map","r","author","content","id","options","headers","accept","Authorization","fetchMovies","axios","resp","data","fetchMoviesById","newUrl","fetchMovieCredits","fetchMovieBySearch","searchMovieByInput","useParams","useState","movies","setMovies","movie","setMovie","cast","setCast"],"sourceRoot":""}