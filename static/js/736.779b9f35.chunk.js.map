{"version":3,"file":"static/js/736.779b9f35.chunk.js","mappings":"sOAEaA,E,OAAeC,GAAAA,IAAH,2D,2BCGjBC,EAAsBC,EAAQ,KAA9BD,kBA6CR,EA3Ca,WACX,OAAuDE,EAAAA,EAAAA,KAA/CC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,KAAMC,EAAtB,EAAsBA,QAASC,EAA/B,EAA+BA,QAASC,EAAxC,EAAwCA,WAmBxC,OAjBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEID,GAAW,GAFf,SAGiCP,EAAkBG,EAAOM,SAH1D,OAGUC,EAHV,OAKIL,EAAQK,EAAeN,MAL3B,gDAOIO,QAAQC,IAAI,SAPhB,yBASIL,GAAW,GATf,6EADc,uBAAC,WAAD,wBAcdM,EACD,GAAE,CAACR,EAASE,EAAYJ,EAAOM,WAG9B,2BACGH,IAAW,SAACQ,EAAA,EAAD,IACXV,IACC,wBACGA,EAAKW,KAAI,SAAAC,GAAC,OACT,0BACGA,EAAEC,eACD,SAACnB,EAAD,CACEoB,IAAG,0CAAqCF,EAAEC,cAC1CE,IAAI,UAGR,uBAAIH,EAAEI,QACN,yBAAG,cAAYJ,EAAEK,eARVL,EAAEM,GADF,QAgBpB,C,4EC9CYR,EAAS,WACpB,OACE,SAAC,KAAD,CACES,YAAY,OACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,GAGd,C,0QCTKC,EAAU,CACdC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIOC,EAAW,mCAAG,oGACNC,EAAAA,EAAAA,IAVT,iEAUwBL,GADT,cACnBM,EADmB,yBAGlBA,EAAKC,MAHa,2CAAH,qDAMXC,EAAe,mCAAG,WAAM3B,GAAN,gFACvB4B,EADuB,6CACwB5B,EADxB,4BAEVwB,EAAAA,EAAAA,IAAUI,EAAQT,GAFR,cAEvBM,EAFuB,yBAItBA,EAAKC,MAJiB,2CAAH,sDAOfnC,EAAiB,mCAAG,WAAMS,GAAN,gFACzB4B,EADyB,6CACsB5B,EADtB,oCAEZwB,EAAAA,EAAAA,IAAUI,EAAQT,GAFN,cAEzBM,EAFyB,yBAIxBA,EAAKC,MAJmB,2CAAH,sDAOjBG,EAAiB,mCAAG,WAAM7B,GAAN,gFACzB4B,EADyB,6CACsB5B,EADtB,2CAEZwB,EAAAA,EAAAA,IAAUI,EAAQT,GAFN,cAEzBM,EAFyB,yBAIxBA,EAAKC,MAJmB,2CAAH,sDAOjBI,EAAkB,mCAAG,WAAMC,GAAN,gFAC1BH,EAD0B,0DACkCG,EADlC,uDAEbP,EAAAA,EAAAA,IAAUI,EAAQT,GAFL,cAE1BM,EAF0B,yBAIzBA,EAAKC,MAJoB,2CAAH,qD,qFCnClBjC,EAAiB,WAC5B,IAAMC,GAASsC,EAAAA,EAAAA,MACf,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOpC,EAAP,KAAgBC,EAAhB,KACA,GAAwBmC,EAAAA,EAAAA,UAAS,MAAjC,eAAOtC,EAAP,KAAaC,EAAb,KACA,GAA8BqC,EAAAA,EAAAA,UAAS,IAAvC,eAEA,MAAO,CACLvC,OAAAA,EACAwC,OAAAA,EACAC,UAAAA,EACAC,MAAAA,EACAC,SAAAA,EACAxC,QAAAA,EACAC,WAAAA,EACAH,KAAAA,EACAC,QAAAA,EACA0C,QAZF,KAaEC,WAbF,KAeD,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/Loader/Loader.jsx","components/api.js","hooks/useMovieParams.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CharacterImg = styled.img`\n  width: 100px;\n  height: 150px;\n`;\n","import { useEffect } from 'react';\nimport { CharacterImg } from './Cast.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport { useMovieParams } from 'hooks/useMovieParams';\n\nconst { fetchMovieCredits } = require('components/api');\n\nconst Cast = () => {\n  const { params, cast, setCast, loading, setLoading } = useMovieParams();\n\n  useEffect(() => {\n    async function fetchMovie() {\n      try {\n        setLoading(true);\n        const fetchedCredits = await fetchMovieCredits(params.movieId);\n\n        setCast(fetchedCredits.cast);\n      } catch (error) {\n        console.log('ERROR');\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    fetchMovie();\n  }, [setCast, setLoading, params.movieId]);\n\n  return (\n    <div>\n      {loading && <Loader />}\n      {cast && (\n        <ul>\n          {cast.map(r => (\n            <li key={r.id}>\n              {r.profile_path && (\n                <CharacterImg\n                  src={`https://image.tmdb.org/t/p/w500/${r.profile_path}`}\n                  alt=\"cast\"\n                />\n              )}\n              <p>{r.name}</p>\n              <p>Character: {r.character}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;","import { RotatingLines } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <RotatingLines\n      strokeColor=\"grey\"\n      strokeWidth=\"5\"\n      animationDuration=\"0.75\"\n      width=\"30\"\n      visible={true}\n    />\n  );\n};\n","import axios from 'axios';\n\nconst url = 'https://api.themoviedb.org/3/trending/movie/day?language=en-US';\nconst options = {\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiZWYwNzZkYzkxYmE1ZGM1YzNhNzg0ZmEyZjhkYjJmOCIsInN1YiI6IjY1MmU1MzcyZWE4NGM3MDBlYmEzNDk3NCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.eb5AtnB5In8Rid9oVZN6shMyC5JnuDma5srOC9ipFqk',\n  },\n};\n\nexport const fetchMovies = async () => {\n  const resp = await axios.get(url, options);\n\n  return resp.data;\n};\n\nexport const fetchMoviesById = async movieId => {\n  const newUrl = `https://api.themoviedb.org/3/movie/${movieId}?language=en-US`;\n  const resp = await axios.get(newUrl, options);\n\n  return resp.data;\n};\n\nexport const fetchMovieCredits = async movieId => {\n  const newUrl = `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US`;\n  const resp = await axios.get(newUrl, options);\n\n  return resp.data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const newUrl = `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1`;\n  const resp = await axios.get(newUrl, options);\n\n  return resp.data;\n};\n\nexport const fetchMovieBySearch = async searchMovieByInput => {\n  const newUrl = `https://api.themoviedb.org/3/search/movie?query=${searchMovieByInput}&include_adult=false&language=en-US&page=1`;\n  const resp = await axios.get(newUrl, options);\n\n  return resp.data;\n};\n","import { useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport const useMovieParams = () => {\n  const params = useParams();\n  const [movies, setMovies] = useState([]);\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [cast, setCast] = useState(null);\n  const [reviews, setReviews] = useState([]);\n\n  return {\n    params,\n    movies,\n    setMovies,\n    movie,\n    setMovie,\n    loading,\n    setLoading,\n    cast,\n    setCast,\n    reviews,\n    setReviews,\n  };\n};\n"],"names":["CharacterImg","styled","fetchMovieCredits","require","useMovieParams","params","cast","setCast","loading","setLoading","useEffect","movieId","fetchedCredits","console","log","fetchMovie","Loader","map","r","profile_path","src","alt","name","character","id","strokeColor","strokeWidth","animationDuration","width","visible","options","headers","accept","Authorization","fetchMovies","axios","resp","data","fetchMoviesById","newUrl","fetchMovieReviews","fetchMovieBySearch","searchMovieByInput","useParams","useState","movies","setMovies","movie","setMovie","reviews","setReviews"],"sourceRoot":""}